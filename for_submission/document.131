Metaprogramming languages[edit]
Metaprogramming is writing of programs that write or manipulate other programs (or themselves) as their data or that do part of the work that is otherwise done at run time during compile time. In many cases, this allows programmers to get more done in the same amount of time as they would take to write all the code manually.

C++
Curl
D
eC
Elixir
Forth
Groovy
Haskell
Julia
Lisp
Lua
Maude system
Mathematica
MetaOCaml
Nemerle
Perl
Python
Ruby
Rust
Scheme
SequenceL
Smalltalk
Wolfram Language
XL (concept programming)
Multiparadigm languages[edit]
Multiparadigm languages support more than one programming paradigm. They allow a program to use more than one programming style. The goal is to allow programmers to use the best tool for a job, admitting that no one paradigm solves all problems in the easiest or most efficient way.

Ada (concurrent, distributed, generic (template metaprogramming), imperative, object-oriented (class-based))
ALF (functional, logic)
Alma-0 (constraint, imperative, logic)
APL (functional, imperative)
BETA (functional, imperative, object-oriented (class-based))
C++ (generic, imperative, object-oriented (class-based), functional)
C# (generic, imperative, object-oriented (class-based), functional, declarative)
Ceylon (generic, imperative, object-oriented (class-based), functional, declarative)
ChucK (imperative, object-oriented, time-based, concurrent, on-the-fly)
Cobra (generic, imperative, object-oriented (class-based), functional, contractual)
Common Lisp (functional, imperative, object-oriented (class-based), aspect-oriented (user may add further paradigms, e.g., logic))
Curl (functional, imperative, object-oriented (class-based), metaprogramming)
Curry (concurrent, functional, logic)
D (generic, imperative, functional, object-oriented (class-based), metaprogramming)
Delphi (generic, imperative, object-oriented (class-based), metaprogramming)
Dylan (functional, object-oriented (class-based))
eC (generic, imperative, object-oriented (class-based))
ECMAScript (functional, imperative, object-oriented (prototype-based))
ActionScript
ECMAScript for XML
JavaScript
JScript
Eiffel (imperative, object-oriented (class-based), generic, functional (agents), concurrent (SCOOP))
F# (functional, generic, object-oriented (class-based), language-oriented)
Fantom (functional, object-oriented (class-based))
FPr (function-level, object-oriented (class-based))
Go (functional, object-oriented (class-based), imperative, procedural),
Groovy (functional, object-oriented (class-based),imperative,procedural)
Harbour
Hop
J (functional, imperative, object-oriented (class-based))
Julia (imperative, multiple dispatch ("object-oriented"), functional, metaprogramming)
LabVIEW (dataflow, visual)
Lava (object-oriented (class-based), visual)
Leda (functional, imperative, logic, object-oriented (class-based))
Lua (functional, imperative, object-oriented (prototype-based))
Mercury (functional, logical, object-oriented)
Metaobject protocols (object-oriented (class-based, prototype-based))
Nemerle (functional, object-oriented (class-based), imperative, metaprogramming)
Objective-C (imperative, object-oriented (class-based), reflective)
OCaml (functional, imperative, object-oriented (class-based))
Oz (functional (evaluation: eager, lazy), logic, constraint, imperative, object-oriented (class-based), concurrent, distributed), and Mozart Programming System cross-platform Oz
Object Pascal (imperative, object-oriented (class-based))
Perl (imperative, functional (can't be purely functional), object-oriented, class-oriented, aspect-oriented (through modules))
PHP (imperative, object-oriented)
Pike
Poplog (functional, imperative, logic)
Prograph (dataflow, object-oriented (class-based), visual)
Python (functional, compiled, interpreted, object-oriented (class-based), imperative, metaprogramming, extension, impure, interactive mode, iterative, reflective, scripting)
R (array, interpreted, impure, interactive mode, list-based, object-oriented prototype-based, scripting)
Racket (functional, imperative, object-oriented (class-based) and can be extended by the user)
REBOL (functional, imperative, object-oriented (prototype-based), metaprogramming (dialected))
ROOP (imperative, logic, object-oriented (class-based), rule-based)
Ruby (imperative, functional, object-oriented (class-based), metaprogramming)
Rust (concurrent, functional, imperative, object-oriented)
Scala (functional, object-oriented)
Seed7 (imperative, object-oriented, generic)
SISAL (concurrent, dataflow, functional)
Spreadsheets (functional, visual)
Tcl (functional, imperative, object-oriented (class-based))
Tea (functional, imperative, object-oriented (class-based))
Windows PowerShell (functional, imperative, pipeline, object-oriented (class-based))
Wolfram Language
XL (concept programming approach)

